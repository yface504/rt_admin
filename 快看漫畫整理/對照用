Deno.serve(async (req: Request) => {
  if (req.method !== "POST") {
    return new Response("Method Not Allowed", { status: 405 });
  }

  const { startDate, endDate, email } = await req.json();

  // 此處添加您的數據處理和ZIP文件創建邏輯

  const zipBuffer = await zipFile.generateAsync({ type: "uint8array" });
  const fileContent = btoa(String.fromCharCode(...zipBuffer));

  if (email) {
    const response = await fetch('https://api.resend.io/send', {
      method: 'POST',
      headers: {
        'Authorization': `Bearer YOUR_RESEND_API_KEY`,
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        from: 'your-email@example.com',
        to: email,
        subject: `您從 ${startDate} 到 ${endDate} 的數據`,
        text: '請查找隨附的 ZIP 文件，其中包含所請求的數據。',
        attachments: [{
          filename: `${startDate}_${endDate}.zip`,
          content: fileContent,
          encoding: 'base64'
        }]
      })
    });

    if (response.ok) {
      return new Response("郵件已成功發送！");
    } else {
      const errorData = await response.json();
      console.error('郵件發送失敗：', errorData);
      return new Response("郵件發送失敗", { status: 500 });
    }
  } else {
    return new Response(zipBuffer, {
      headers: {
        "Content-Type": "application/zip",
        "Content-Disposition": `attachment; filename="${startDate}_${endDate}.zip"`
      }
    });
  }
});
